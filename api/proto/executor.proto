syntax = "proto3";

package executor;

option go_package = "api/proto;executor";

// Request for Terraform Plan
message PlanRequest {
  string workspace = 1; // Name of the Terraform workspace
  string code = 2;      // The Terraform configuration code snippet
}

// Response for Terraform Plan
message PlanResponse {
  bool success = 1;     // Whether the plan generation was successful
  string plan_output = 2; // The output of `terraform plan`
  string error = 3;     // Error message, if any
}

// Request for Terraform Apply
message ApplyRequest {
  string workspace = 1; // Name of the Terraform workspace
  string plan_file = 2; // Path to the saved Terraform plan file (optional)
  string code = 3;      // The Terraform configuration code snippet (optional)
}

// Response for Terraform Apply
message ApplyResponse {
  bool success = 1;     // Whether the apply operation was successful
  string apply_output = 2; // The output of `terraform apply`
  string error = 3;     // Error message, if any
}

// Request for Terraform Destroy
message DestroyRequest {
  string workspace = 1; // Name of the Terraform workspace
}

// Response for Terraform Destroy
message DestroyResponse {
  bool success = 1;     // Whether the destroy operation was successful
  string destroy_output = 2; // The output of `terraform destroy`
  string error = 3;     // Error message, if any
}

// The Executor service definition.
service Executor {
  // Generates a Terraform plan and returns the result.
  rpc Plan(PlanRequest) returns (PlanResponse);

  // Applies the Terraform plan and returns the execution result.
  rpc Apply(ApplyRequest) returns (ApplyResponse);

  // Destroys the Terraform-managed infrastructure and returns the result.
  rpc Destroy(DestroyRequest) returns (DestroyResponse);
}
